// Thermistor Temperature Measurement using Steinhart-Hart Equation

// Analog pin connected to the voltage divider junction
const int analogPin = A0;

// Known resistor value in ohms (10kΩ)
const float R_known = 10000.0;

// Steinhart-Hart coefficients
const float A = 3.177375604e-3;
const float B = -1.943594695e-4;
const float C = 17.28036632e-7;

void setup() {
  Serial.begin(9600); // Initialize serial communication at 9600 bits per second
}

void loop() {
  // Read the analog value (0 to 1023)
  int adcValue = analogRead(analogPin);

  // Convert ADC value to voltage
  float V_adc = adcValue * (5.0 / 1023.0);  // Use 3.3 if using 3.3V reference

  // Calculate thermistor resistance
  float R_thermistor = (V_adc * R_known) / (5.0 - V_adc);

  // Check for invalid resistance values
  if (R_thermistor <= 0 || isnan(R_thermistor) || isinf(R_thermistor)) {
    Serial.println("Invalid resistance value");
  } else {
    // Calculate temperature in Kelvin using Steinhart-Hart Equation
    float lnR = log(R_thermistor);
    float inv_T = A + B * lnR + C * pow(lnR, 3);
    float T_kelvin = 1.0 / inv_T;

    // Convert Kelvin to Celsius
    float T_celsius = T_kelvin - 273.15;

    // Round temperature to the nearest integer
    int T_celsius_int = round(T_celsius);

    // Display the results
    Serial.print("ADC Value: ");
    Serial.print(adcValue);
    Serial.print(" | Voltage: ");
    Serial.print(V_adc);
    Serial.print(" V | Resistance: ");
    Serial.print(R_thermistor);
    Serial.print(" Ω | Temperature: ");
    Serial.print(T_celsius_int);
    Serial.println(" °C");
  }

  delay(1000);  // Wait for 1 second before the next reading
}
